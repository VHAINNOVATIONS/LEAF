{
  "openapi": "3.0.0",
  "info": {
    "title": "Nexus API",
    "description": "Nexus API Endpoints",
    "contact": {
      "name": "LEAF Support",
      "email": "leafsupport@ablevets.com"
    },
    "license": {
      "name": "Apache 2.0",
      "url": "https://www.apache.org/licenses/LICENSE-2.0.html"
    },
    "version": "2.0.0"
  },
  "servers": [
    {
      "url": "http://localhost/LEAF_Nexus/api/",
      "description": "Local DEV server (uses test data)"
    },
    {
      "url": "https://localhost/LEAF_Nexus/api/",
      "description": "Local DEV server (uses test data)"
    },
    {
      "url": "https://leaf.va.gov:8443/LEAF_Nexus/api",
      "description": "Production server (uses live data)"
    }
  ],
  "components": {
    "schemas": {
      "employee": {
        "type": "object",
        "properties": {
          "firstName": {
            "type": "string"
          },
          "lastName": {
            "type": "string"
          },
          "middleName": {
            "type": "string"
          },
          "userName": {
            "type": "string"
          }
        },
        "example": {
          "firstName": "Lilly",
          "lastName": "Wang",
          "middleName": null,
          "userName": "lillyw"
        }
      },
      "groups": {
        "type": "object",
        "properties": {
          "groupTitle": {
            "type": "string"
          },
          "parentID": {
            "type": "integer"
          }
        },
        "example": {
          "groupTitle": "LWTesting",
          "parentID": 0
        }
      },
      "positions": {
        "type": "object",
        "properties": {
          "positionTitle": {
            "type": "string"
          },
          "parentID": {
            "type": "integer"
          },
          "positionID": {
            "type": "integer"
          }
        },
        "example": {
          "positionTitle": "Test Position Title Super",
          "parentID": 0,
          "positionID": 2
        }
      }
    },
    "responses": {
      "404NotFound": {
        "description": "The specified resource was not found."
      },
      "400InvalidID": {
        "description": "The specified resource was invalid."
      },
      "default": {
        "description": "Unexpected error"
      }
    },
    "parameters": {
      "cookieParam": {
        "name": "cookie",
        "in": "header",
        "description": "PHPSESSID to be passed as a header",
        "required": true,
        "schema": {
          "type": "string"
        }
      },
      "tokenParam": {
        "name": "CSRFToken",
        "in": "header",
        "description": "CSRFToken to be passed as a header",
        "required": true,
        "schema": {
          "type": "string"
        }
      },
      "responseParam": {
        "name": "Access-Control-Allow-Origin",
        "in": "header",
        "description": "C",
        "required": true,
        "schema": {
          "type": "string",
          "default": "*"
        }
      }
    }
  },
  "style": "simple",
  "paths": {
    "/": {
      "get": {
        "summary": "Give an API endpoint as query parameter for GET openeration",
        "parameters": [
          {
            "in": "query",
            "name": "a",
            "required": true,
            "schema": {
              "type": "string"
            },
            "allowReserved": true,
            "example": "employee/1"
          }
        ],
        "responses": {
          "200": {
            "description": "A single endpoint response"
          }
        }
      },
      "post": {
        "summary": "Give an API endpoint as query parameter for POST openeration",
        "parameters": [
          {
            "in": "cookie",
            "name": "PHPSESSID",
            "schema": {
              "type": "string"
            }
          },
          {
            "in": "header",
            "name": "CSRFToken",
            "schema": {
              "type": "string"
            }
          },
          {
            "in": "query",
            "name": "a",
            "required": true,
            "schema": {
              "type": "string"
            },
            "allowReserved": true,
            "example": "employee/new"
          }
        ],
        "requestBody": {
          "description": "Provide a requestBody content for the endpoint.",
          "required": true,
          "content": {
            "application/json": {
              "schema": {
                "type": "object"
              },
              "example": {
                "firstName": "Lilly",
                "lastName": "Wang",
                "middleName": null,
                "userName": "lillyw"
              }
            }
          }
        },
        "responses": {
          "200": {
            "description": "OK"
          }
        }
      }
    },
    "/employee/new": {
      "post": {
        "summary": "Adds a new employee",
        "parameters": [
          {
            "in": "cookie",
            "name": "PHPSESSID",
            "schema": {
              "type": "string"
            }
          },
          {
            "in": "header",
            "name": "CSRFToken",
            "schema": {
              "type": "string"
            }
          }
        ],
        "requestBody": {
          "description": "original endpoint:employee/new; calls addNew({firstName}, {lastName}, {middleName}, {userName})\"",
          "required": true,
          "content": {
            "application/json": {
              "schema": {
                "$ref": "#/components/schemas/employee"
              }
            }
          }
        },
        "responses": {
          "200": {
            "description": "OK"
          }
        }
      }
    },
    "/employee/{empUID}": {
      "get": {
        "summary": "Get a user by ID",
        "parameters": [
          {
            "name": "empUID",
            "in": "path",
            "required": true,
            "description": "empUID field in Employee table.",
            "schema": {
              "type": "integer",
              "format": "int64",
              "minimum": 1
            }
          }
        ],
        "responses": {
          "200": {
            "description": "A single employee.",
            "content": {
              "application/json": {
                "schema": {
                  "$ref": "#/components/schemas/employee"
                }
              }
            }
          }
        }
      }
    },
    "/group/new": {
      "post": {
        "summary": "Adds a new group",
        "parameters": [
          {
            "in": "cookie",
            "name": "PHPSESSID",
            "schema": {
              "type": "string"
            }
          },
          {
            "in": "header",
            "name": "CSRFToken",
            "schema": {
              "type": "string"
            }
          }
        ],
        "description": "original endpoint:employee/new; calls addNew({title}, {parentID})",
        "requestBody": {
          "content": {
            "application/json": {
              "schema": {
                "$ref": "#/components/schemas/groups"
              }
            }
          }
        },
        "responses": {
          "200": {
            "description": "OK"
          }
        }
      }
    },
    "/group/{groupID}": {
      "get": {
        "summary": "Get a group by ID",
        "parameters": [
          {
            "name": "groupID",
            "in": "path",
            "required": true,
            "description": "groupID field in groups table.",
            "schema": {
              "type": "integer",
              "format": "int64",
              "minimum": 1
            }
          }
        ],
        "responses": {
          "200": {
            "description": "A single group.",
            "content": {
              "application/json": {
                "schema": {
                  "$ref": "#/components/schemas/groups"
                }
              }
            }
          }
        }
      }
    },
    "/position/new": {
      "post": {
        "summary": "Adds a new position",
        "parameters": [
          {
            "in": "cookie",
            "name": "PHPSESSID",
            "schema": {
              "type": "string"
            }
          },
          {
            "in": "header",
            "name": "CSRFToken",
            "schema": {
              "type": "string"
            }
          }
        ],
        "description": "original endpoint:position; calls addNew({title}, {parentID}, {groupID})\"",
        "requestBody": {
          "content": {
            "application/json": {
              "schema": {
                "$ref": "#/components/schemas/positions"
              }
            }
          }
        },
        "responses": {
          "200": {
            "description": "OK"
          }
        }
      }
    },
    "/position/{positionID}": {
      "get": {
        "summary": "Get a position by ID",
        "parameters": [
          {
            "name": "positionID",
            "in": "path",
            "required": true,
            "description": "positionID field in positions table.",
            "schema": {
              "type": "integer",
              "format": "int64",
              "minimum": 1
            }
          }
        ],
        "responses": {
          "200": {
            "description": "A single group.",
            "content": {
              "application/json": {
                "schema": {
                  "$ref": "#/components/schemas/positions"
                }
              }
            }
          }
        }
      }
    }
  }
}
