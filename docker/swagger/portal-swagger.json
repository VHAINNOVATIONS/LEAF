{
  "openapi": "3.0.0",
  "info": {
    "version": "2.0.0",
    "title": "Request Portal"
  },
  "host": "leafrequestportal.gov",
  "basePath": "/api/v2",
  "tags": [
    {
      "name": "form",
      "description": "Renames FormEditor for clarity, with Operations from FormEditor.php"
    },
    {
      "name": "indicator",
      "description": "Functions for indicators, with Operations from FormEditor.php/form.php"
    },
    {
      "name": "request",
      "description": "Renames Form for clarity, with Operations from form.php"
    },
    {
      "name": "search",
      "description": "Search functions"
    },
    {
      "name": "workflow",
      "description": "Operations from Workflow.php"
    },
    {
      "name": "group",
      "description": "Operations from Group.php"
    },
    {
      "name": "service",
      "description": "Operations from Service.php"
    },
    {
      "name": "settings",
      "description": "***These functions all use formVariables, must update. New controller with Operations from System.php"
    },
    {
      "name": "templates",
      "description": "New controller with Operations from System.php"
    },
    {
      "name": "import",
      "description": "imports xls"
    },
    {
      "name": "inbox",
      "description": "Operations from Inbox.php"
    },
    {
      "name": "classicphonebook",
      "description": "MAYBE REMOVE - Operations from VAMC_Directory.php"
    },
    {
      "name": "converter",
      "description": "MAYBE REMOVE"
    },
    {
      "name": "FTEData",
      "description": "MAYBE REMOVE - Operations from Form.php"
    },
    {
      "name": "simpledata",
      "description": "MAYBE REMOVE - Operations from Form.php"
    },
    {
      "name": "telemetry",
      "description": "MAYBE REMOVE - Operations from Telemetry.php"
    }
  ],
  "paths": {
    "/form": {
      "get": {
        "tags": [
          "form"
        ],
        "description": " original endpont: form/categories; calls form.php getAllCategories()",
        "responses": {
          "200": {
            "description": "successful operation"
          }
        }
      }
    },
    "/form/new": {
      "post": {
        "tags": [
          "form"
        ],
        "description": " original endpont: create new form; calls FormEditor.php createForm({name},{description},{parentID})",
        "consumes": [
          "multipart/form-data"
        ],
        "parameters": [
          {
            "name": "name",
            "in": "formData",
            "required": true,
            "type": "string"
          },
          {
            "name": "description",
            "in": "formData",
            "required": true,
            "type": "string"
          },
          {
            "name": "parentID",
            "in": "formData",
            "required": true,
            "type": "string"
          }
        ],
        "responses": {
          "200": {
            "description": "successful operation"
          }
        }
      }
    },
    "/form/{categoryID}": {
      "get": {
        "tags": [
          "form"
        ],
        "description": " original endpont:form/category; calls form.php getFormByCategory({categoryID})",
        "parameters": [
          {
            "name": "categoryID",
            "in": "path",
            "required": true,
            "type": "string"
          }
        ],
        "responses": {
          "200": {
            "description": "successful operation"
          }
        }
      },
      "delete": {
        "tags": [
          "form"
        ],
        "description": " original endpont:formStack/[text]; **move ths was formstack; calls FormStack.php deleteForm({categoryID})",
        "parameters": [
          {
            "name": "categoryID",
            "in": "path",
            "required": true,
            "type": "integer"
          }
        ],
        "responses": {
          "200": {
            "description": "successful operation"
          }
        }
      }
    },
    "/form/{categoryID}/export": {
      "get": {
        "tags": [
          "form"
        ],
        "description": " original endpont:form/category calls getFormByCategory({categoryID}, false)",
        "parameters": [
          {
            "name": "categoryID",
            "in": "path",
            "required": true,
            "type": "string"
          }
        ],
        "responses": {
          "200": {
            "description": "successful operation"
          }
        }
      }
    },
    "/form/{categoryID}/flat": {
      "get": {
        "tags": [
          "form"
        ],
        "description": " original endpont:form/[text]/flat; calls same search function, but uses {categoryID}, but calls flattenFullFormData() on the result",
        "parameters": [
          {
            "name": "categoryID",
            "in": "path",
            "required": true,
            "type": "string"
          }
        ],
        "responses": {
          "200": {
            "description": "successful operation"
          }
        }
      }
    },
    "/form/{categoryID}/workflow": {
      "get": {
        "tags": [
          "form"
        ],
        "description": " original endpont:form/[text]/workflow; calls getWorkflow({categoryID})",
        "parameters": [
          {
            "name": "categoryID",
            "in": "path",
            "required": true,
            "type": "string"
          }
        ],
        "responses": {
          "200": {
            "description": "successful operation"
          }
        }
      }
    },
    "/form/{categoryID}/workflow/{workflowID}": {
      "post": {
        "tags": [
          "form"
        ],
        "description": " original endpont:formEditor/formWorkflow; calls FormEditor.php setFormWorkflow({categoryID}, {workflowID})",
        "parameters": [
          {
            "name": "categoryID",
            "in": "path",
            "required": true,
            "type": "string"
          },
          {
            "name": "workflowID",
            "in": "path",
            "required": true,
            "type": "integer"
          }
        ],
        "responses": {
          "200": {
            "description": "successful operation"
          }
        }
      }
    },
    "/form/{categoryID}/privileges": {
      "get": {
        "tags": [
          "form"
        ],
        "description": " original endpont:formEditor/[text]/privileges; calls FormEditor.php getCategoryPrivileges({categoryID})",
        "parameters": [
          {
            "name": "categoryID",
            "in": "path",
            "required": true,
            "type": "string"
          }
        ],
        "responses": {
          "200": {
            "description": "successful operation"
          }
        }
      }
    },
    "/form/{categoryID}/privileges/{groupID}/{read}/{write}": {
      "post": {
        "tags": [
          "form"
        ],
        "description": " original endpont:formEditor/[text]/privileges; calls FormEditor.php setCategoryPrivileges({categoryID}, {groupID}, {read}, {write})",
        "parameters": [
          {
            "name": "categoryID",
            "in": "path",
            "required": true,
            "type": "string"
          },
          {
            "name": "groupID",
            "in": "path",
            "required": true,
            "type": "integer"
          },
          {
            "name": "read",
            "in": "path",
            "required": true,
            "type": "integer"
          },
          {
            "name": "write",
            "in": "path",
            "required": true,
            "type": "integer"
          }
        ],
        "responses": {
          "200": {
            "description": "successful operation"
          }
        }
      }
    },
    "/form/{categoryID}/stapled": {
      "get": {
        "tags": [
          "form"
        ],
        "description": " original endpont:formEditor/[text]/stapled; calls FormEditor.php getStapledCategories({categoryID})",
        "parameters": [
          {
            "name": "categoryID",
            "in": "path",
            "required": true,
            "type": "string"
          }
        ],
        "responses": {
          "200": {
            "description": "successful operation"
          }
        }
      }
    },
    "/form/{categoryID}/stapled/{stapledCategoryID}": {
      "post": {
        "tags": [
          "form"
        ],
        "description": " original endpont:formEditor/[text]/stapled; calls FormEditor.php addStapledCategory({categoryID}, {stapledCategoryID})",
        "parameters": [
          {
            "name": "categoryID",
            "in": "path",
            "required": true,
            "type": "string"
          },
          {
            "name": "stapledCategoryID",
            "in": "path",
            "required": true,
            "type": "string"
          }
        ],
        "responses": {
          "200": {
            "description": "successful operation"
          }
        }
      },
      "delete": {
        "tags": [
          "form"
        ],
        "description": " original endpont:formEditor/[text]/stapled/[text]; calls FormEditor.php removeStapledCategory({categoryID}, {stapledCategoryID})",
        "parameters": [
          {
            "name": "categoryID",
            "in": "path",
            "required": true,
            "type": "string"
          },
          {
            "name": "stapledCategoryID",
            "in": "path",
            "required": true,
            "type": "string"
          }
        ],
        "responses": {
          "200": {
            "description": "successful operation"
          }
        }
      }
    },
    "/form/{categoryID}/description/{description}": {
      "post": {
        "tags": [
          "form"
        ],
        "description": " original endpont:formEditor/formDescription; calls FormEditor.php setFormDescription({categoryID},{description))",
        "parameters": [
          {
            "name": "categoryID",
            "in": "path",
            "required": true,
            "type": "string"
          },
          {
            "name": "description",
            "in": "path",
            "required": true,
            "type": "string"
          }
        ],
        "responses": {
          "200": {
            "description": "successful operation"
          }
        }
      }
    },
    "/form/{categoryID}/name/{name}": {
      "post": {
        "tags": [
          "form"
        ],
        "description": " original endpont:formEditor/formName; calls FormEditor.php setFormName({categoryID},{name})",
        "parameters": [
          {
            "name": "categoryID",
            "in": "path",
            "required": true,
            "type": "string"
          },
          {
            "name": "name",
            "in": "path",
            "required": true,
            "type": "string"
          }
        ],
        "responses": {
          "200": {
            "description": "successful operation"
          }
        }
      }
    },
    "/form/{categoryID}/needToKnow/{needToKnow}": {
      "post": {
        "tags": [
          "form"
        ],
        "description": " original endpont:formEditor/formNeedToKnow; calls FormEditor.php setFormNeedToKnow({categoryID}, {needToKnow})",
        "parameters": [
          {
            "name": "categoryID",
            "in": "path",
            "required": true,
            "type": "string"
          },
          {
            "name": "needToKnow",
            "in": "path",
            "required": true,
            "type": "integer"
          }
        ],
        "responses": {
          "200": {
            "description": "successful operation"
          }
        }
      }
    },
    "/form/{categoryID}/sort/{sort}": {
      "post": {
        "tags": [
          "form"
        ],
        "description": " original endpont:formEditor/formSort; calls FormEditor.php setFormSort({categoryID}, {sort})",
        "parameters": [
          {
            "name": "categoryID",
            "in": "path",
            "required": true,
            "type": "string"
          },
          {
            "name": "sort",
            "in": "path",
            "required": true,
            "type": "integer"
          }
        ],
        "responses": {
          "200": {
            "description": "successful operation"
          }
        }
      }
    },
    "/form/{categoryID}/type/{type}": {
      "post": {
        "tags": [
          "form"
        ],
        "description": " original endpont:formEditor/formType; calls FormEditor.php setFormType({categoryID}, {type})",
        "parameters": [
          {
            "name": "categoryID",
            "in": "path",
            "required": true,
            "type": "integer"
          },
          {
            "name": "type",
            "in": "path",
            "required": true,
            "type": "string"
          }
        ],
        "responses": {
          "200": {
            "description": "successful operation"
          }
        }
      }
    },
    "/form/{categoryID}/visible/{visible}": {
      "post": {
        "tags": [
          "form"
        ],
        "description": " original endpont:formEditor/formVisible; calls FormEditor.php setFormVisible({categoryID}, {visible})",
        "parameters": [
          {
            "name": "categoryID",
            "in": "path",
            "required": true,
            "type": "string"
          },
          {
            "name": "visible",
            "in": "path",
            "required": true,
            "type": "integer"
          }
        ],
        "responses": {
          "200": {
            "description": "successful operation"
          }
        }
      }
    },
    "/form/import": {
      "post": {
        "tags": [
          "form"
        ],
        "description": " original endpont:ajaxIndex.php?a=importForm; calls formStack.php importForm()",
        "responses": {
          "200": {
            "description": "successful operation"
          }
        }
      }
    },
    "/form/import/literal": {
      "post": {
        "tags": [
          "form"
        ],
        "description": " original endpont:formStack/importLiteral; calls formStack.php importForm(true)",
        "responses": {
          "200": {
            "description": "successful operation"
          }
        }
      }
    },
    "/form/import/manual": {
      "post": {
        "tags": [
          "form"
        ],
        "description": " original endpont: calls formStack.php importForm(), header('Location: ./?a=form')",
        "responses": {
          "200": {
            "description": "successful operation"
          }
        }
      }
    },
    "/indicator": {
      "get": {
        "tags": [
          "indicator"
        ],
        "description": " original endpont:ajaxIndex.php?a=manualImportForm; calls getIndicatorList()",
        "responses": {
          "200": {
            "description": "successful operation"
          }
        }
      }
    },
    "/indicator/new": {
      "post": {
        "tags": [
          "indicator"
        ],
        "description": " original endpont:formEditor/newIndicator; calls FormEditor.php addIndicator(array({name}, {format}, {description}, {default}, {parentID}, {categoryID}, {html}, {htmlPrint}, {required}, {sort}))",
        "consumes": [
          "multipart/form-data"
        ],
        "parameters": [
          {
            "name": "name",
            "in": "formData",
            "required": true,
            "type": "string"
          },
          {
            "name": "format",
            "in": "formData",
            "required": true,
            "type": "string"
          },
          {
            "name": "description",
            "in": "formData",
            "required": true,
            "type": "string"
          },
          {
            "name": "default",
            "in": "formData",
            "required": true,
            "type": "string"
          },
          {
            "name": "parentID",
            "in": "formData",
            "required": true,
            "type": "integer"
          },
          {
            "name": "categoryID",
            "in": "formData",
            "required": true,
            "type": "string"
          },
          {
            "name": "html",
            "in": "formData",
            "required": true,
            "type": "string"
          },
          {
            "name": "htmlPrint",
            "in": "formData",
            "required": true,
            "type": "string"
          },
          {
            "name": "required",
            "in": "formData",
            "required": true,
            "type": "integer"
          },
          {
            "name": "sort",
            "in": "formData",
            "required": true,
            "type": "integer"
          }
        ],
        "responses": {
          "200": {
            "description": "successful operation"
          }
        }
      }
    },
    "/indicator/sortBy/{sort}": {
      "get": {
        "tags": [
          "indicator"
        ],
        "description": " original endpont:form/indicator/list; calls getIndicatorList({sort})",
        "parameters": [
          {
            "name": "sort",
            "in": "path",
            "required": true,
            "type": "string"
          }
        ],
        "responses": {
          "200": {
            "description": "successful operation"
          }
        }
      }
    },
    "/indicator/disabled": {
      "get": {
        "tags": [
          "indicator"
        ],
        "description": " original endpont:form/indicator/list/disabled; calls getDisabledIndicatorList(1)",
        "responses": {
          "200": {
            "description": "successful operation"
          }
        }
      }
    },
    "/indicator/{indicatorID}/categoryID/{categoryID}": {
      "post": {
        "tags": [
          "indicator"
        ],
        "description": " original endpont:formEditor/[digit]/categoryID; calls FormEditor.php setCategoryID({indicatorID}, {categoryID})",
        "parameters": [
          {
            "name": "indicatorID",
            "in": "path",
            "required": true,
            "type": "integer"
          },
          {
            "name": "categoryID",
            "in": "path",
            "required": true,
            "type": "string"
          }
        ],
        "responses": {
          "200": {
            "description": "successful operation"
          }
        }
      }
    },
    "/indicator/{indicatorID}/default/{default}": {
      "post": {
        "tags": [
          "indicator"
        ],
        "description": " original endpont:formEditor/[digit]/default; calls FormEditor.php setDefault({indicatorID}, {default})",
        "parameters": [
          {
            "name": "indicatorID",
            "in": "path",
            "required": true,
            "type": "integer"
          },
          {
            "name": "default",
            "in": "path",
            "required": true,
            "type": "string"
          }
        ],
        "responses": {
          "200": {
            "description": "successful operation"
          }
        }
      }
    },
    "/indicator/{indicatorID}/description/{description}": {
      "post": {
        "tags": [
          "indicator"
        ],
        "description": " original endpont:formEditor/[digit]/description; calls FormEditor.php setDescription({indicatorID}, {description})",
        "parameters": [
          {
            "name": "indicatorID",
            "in": "path",
            "required": true,
            "type": "integer"
          },
          {
            "name": "description",
            "in": "path",
            "required": true,
            "type": "string"
          }
        ],
        "responses": {
          "200": {
            "description": "successful operation"
          }
        }
      }
    },
    "/indicator/{indicatorID}/disabled/{disabled}": {
      "post": {
        "tags": [
          "indicator"
        ],
        "description": " original endpont:formEditor/[digit]/disabled; calls FormEditor.php setDisabled({indicatorID}, {disabled})",
        "parameters": [
          {
            "name": "indicatorID",
            "in": "path",
            "required": true,
            "type": "integer"
          },
          {
            "name": "disabled",
            "in": "path",
            "required": true,
            "type": "integer"
          }
        ],
        "responses": {
          "200": {
            "description": "successful operation"
          }
        }
      }
    },
    "/indicator/{indicatorID}/format/{format}": {
      "post": {
        "tags": [
          "indicator"
        ],
        "description": " original endpont:formEditor/[digit]/format; calls FormEditor.php setFormat({indicatorID}, {format})",
        "parameters": [
          {
            "name": "indicatorID",
            "in": "path",
            "required": true,
            "type": "integer"
          },
          {
            "name": "format",
            "in": "path",
            "required": true,
            "type": "string"
          }
        ],
        "responses": {
          "200": {
            "description": "successful operation"
          }
        }
      }
    },
    "/indicator/{indicatorID}/html/{html}": {
      "post": {
        "tags": [
          "indicator"
        ],
        "description": " original endpont:formEditor/[digit]/html; calls FormEditor.php setHtml({indicatorID}, {html})",
        "parameters": [
          {
            "name": "indicatorID",
            "in": "path",
            "required": true,
            "type": "integer"
          },
          {
            "name": "html",
            "in": "path",
            "required": true,
            "type": "string"
          }
        ],
        "responses": {
          "200": {
            "description": "successful operation"
          }
        }
      }
    },
    "/indicator/{indicatorID}/htmlPrint/{htmlPrint}": {
      "post": {
        "tags": [
          "indicator"
        ],
        "description": " original endpont:formEditor/[digit]/htmlPrint; calls FormEditor.php setHtmlPrint({indicatorID}, {htmlPrint})",
        "parameters": [
          {
            "name": "indicatorID",
            "in": "path",
            "required": true,
            "type": "integer"
          },
          {
            "name": "htmlPrint",
            "in": "path",
            "required": true,
            "type": "string"
          }
        ],
        "responses": {
          "200": {
            "description": "successful operation"
          }
        }
      }
    },
    "/indicator/{indicatorID}/name/{name}": {
      "post": {
        "tags": [
          "indicator"
        ],
        "description": " original endpont:formEditor/[digit]/name; calls FormEditor.php setName({indicatorID}, {name})",
        "parameters": [
          {
            "name": "indicatorID",
            "in": "path",
            "required": true,
            "type": "integer"
          },
          {
            "name": "name",
            "in": "path",
            "required": true,
            "type": "string"
          }
        ],
        "responses": {
          "200": {
            "description": "successful operation"
          }
        }
      }
    },
    "/indicator/{indicatorID}/parentID/{parentID}": {
      "post": {
        "tags": [
          "indicator"
        ],
        "description": " original endpont:formEditor/[digit]/parentID; calls FormEditor.php setParentID({indicatorID}, {parentID})",
        "parameters": [
          {
            "name": "indicatorID",
            "in": "path",
            "required": true,
            "type": "integer"
          },
          {
            "name": "parentID",
            "in": "path",
            "required": true,
            "type": "integer"
          }
        ],
        "responses": {
          "200": {
            "description": "successful operation"
          }
        }
      }
    },
    "/indicator/{indicatorID}/required/{required}": {
      "post": {
        "tags": [
          "indicator"
        ],
        "description": " original endpont:formEditor/[digit]/required; calls FormEditor.php setRequired({indicatorID}, {required})",
        "parameters": [
          {
            "name": "indicatorID",
            "in": "path",
            "required": true,
            "type": "integer"
          },
          {
            "name": "required",
            "in": "path",
            "required": true,
            "type": "integer",
            "enum": [
              0,
              1
            ]
          }
        ],
        "responses": {
          "200": {
            "description": "successful operation"
          }
        }
      }
    },
    "/indicator/{indicatorID}/sort/{sort}": {
      "post": {
        "tags": [
          "indicator"
        ],
        "description": " original endpont:formEditor/[digit]/sort; calls FormEditor.php setSort({indicatorID}, {sort})",
        "parameters": [
          {
            "name": "indicatorID",
            "in": "path",
            "required": true,
            "type": "integer"
          },
          {
            "name": "sort",
            "in": "path",
            "required": true,
            "type": "integer"
          }
        ],
        "responses": {
          "200": {
            "description": "successful operation"
          }
        }
      }
    },
    "/indicator/{indicatorID}/privileges": {
      "get": {
        "tags": [
          "indicator"
        ],
        "description": " original endpont:formEditor/indicator/[digit]/privileges; calls FormEditor.php getIndicatorPrivileges({indicatorID})",
        "parameters": [
          {
            "name": "indicatorID",
            "in": "path",
            "required": true,
            "type": "integer"
          }
        ],
        "responses": {
          "200": {
            "description": "successful operation"
          }
        }
      }
    },
    "/indicator/{indicatorID}/privileges/{groupID}": {
      "post": {
        "tags": [
          "indicator"
        ],
        "description": " original endpont:formEditor/indicator/[digit]/privileges; calls FormEditor.php setIndicatorPrivileges({indicatorID}, {groupID})",
        "parameters": [
          {
            "name": "indicatorID",
            "in": "path",
            "required": true,
            "type": "integer"
          },
          {
            "name": "groupID",
            "in": "path",
            "required": true,
            "type": "string"
          }
        ],
        "responses": {
          "200": {
            "description": "successful operation"
          }
        }
      },
      "delete": {
        "tags": [
          "indicator"
        ],
        "description": " original endpont:formEditor/indicator/[digit]/privileges/remove; calls FormEditor.php removeIndicatorPrivilege({indicatorID}, {groupID})",
        "parameters": [
          {
            "name": "indicatorID",
            "in": "path",
            "required": true,
            "type": "integer"
          },
          {
            "name": "groupID",
            "in": "path",
            "required": true,
            "type": "integer"
          }
        ],
        "responses": {
          "200": {
            "description": "successful operation"
          }
        }
      }
    },
    "/request/new": {
      "post": {
        "tags": [
          "request"
        ],
        "description": " original endpont:form/new; calls newForm($login->getUserID())",
        "responses": {
          "200": {
            "description": "successful operation"
          }
        }
      }
    },
    "/request/{recordID}": {
      "post": {
        "tags": [
          "request"
        ],
        "description": " original endpont:form/[digit]; calls doModify({recordID})",
        "parameters": [
          {
            "name": "recordID",
            "in": "path",
            "required": true,
            "type": "integer"
          }
        ],
        "responses": {
          "200": {
            "description": "successful operation"
          }
        }
      },
      "delete": {
        "tags": [
          "request"
        ],
        "description": " original endpont:form/[digit]/cancel; calls deleteRecord({recordID})",
        "parameters": [
          {
            "name": "recordID",
            "in": "path",
            "required": true,
            "type": "integer"
          }
        ],
        "responses": {
          "200": {
            "description": "successful operation"
          }
        }
      }
    },
    "/request/{recordID}/restore": {
      "post": {
        "tags": [
          "request"
        ],
        "description": " original endpont:ajaxIndex.php?a=restore; calls restoreRecord({recordID})",
        "parameters": [
          {
            "name": "recordID",
            "in": "path",
            "required": true,
            "type": "integer"
          }
        ],
        "responses": {
          "200": {
            "description": "successful operation"
          }
        }
      }
    },
    "/request/{recordID}/form": {
      "get": {
        "tags": [
          "request"
        ],
        "description": " original endpont:form/[digit]; calls getForm({recordID}); get form for this record",
        "parameters": [
          {
            "name": "recordID",
            "in": "path",
            "required": true,
            "type": "integer"
          }
        ],
        "responses": {
          "200": {
            "description": "successful operation"
          }
        }
      }
    },
    "/request/{recordID}/form/json": {
      "get": {
        "tags": [
          "request"
        ],
        "description": " original endpont:ajaxJSON.php?a=getform calls getFormJSON({recordID})",
        "parameters": [
          {
            "name": "recordID",
            "in": "path",
            "required": true,
            "type": "integer"
          }
        ],
        "responses": {
          "200": {
            "description": "successful operation"
          }
        }
      }
    },
    "/request/{recordID}/form/add/{categoryID}": {
      "post": {
        "tags": [
          "request"
        ],
        "description": " original endpont:form/[digit]/types/append; calls addFormType({recordID}, {categoryID}))",
        "parameters": [
          {
            "name": "recordID",
            "in": "path",
            "required": true,
            "type": "integer"
          },
          {
            "name": "categoryID",
            "in": "path",
            "required": true,
            "type": "string"
          }
        ],
        "responses": {
          "200": {
            "description": "successful operation"
          }
        }
      }
    },
    "/request/{recordID}/form/update/{categoryIDs}": {
      "post": {
        "tags": [
          "request"
        ],
        "description": " original endpont:form/[digit]/types; calls changeFormType({recordID}, {categoryIDs})",
        "parameters": [
          {
            "name": "recordID",
            "in": "path",
            "required": true,
            "type": "integer"
          },
          {
            "name": "categoryIDs",
            "in": "path",
            "required": true,
            "type": "string"
          }
        ],
        "responses": {
          "200": {
            "description": "successful operation"
          }
        }
      }
    },
    "/request/{recordID}/bookmark": {
      "post": {
        "tags": [
          "request"
        ],
        "description": " original endpont:ajaxIndex.php?a=addbookmark; calls form.php addTag({recordID}, 'bookmark_' . $login->getUserID())",
        "parameters": [
          {
            "name": "recordID",
            "in": "path",
            "required": true,
            "type": "integer"
          }
        ],
        "responses": {
          "200": {
            "description": "successful operation"
          }
        }
      },
      "delete": {
        "tags": [
          "request"
        ],
        "description": " original endpont:ajaxIndex.php?a=removebookmark; calls form.php deleteTag({recordID}, 'bookmark_' . $login->getUserID())",
        "parameters": [
          {
            "name": "recordID",
            "in": "path",
            "required": true,
            "type": "integer"
          }
        ],
        "responses": {
          "200": {
            "description": "successful operation"
          }
        }
      }
    },
    "/request/{recordID}/data": {
      "get": {
        "tags": [
          "request"
        ],
        "description": " original endpont:form/[digit]/data; calls getFullFormData({recordID})",
        "parameters": [
          {
            "name": "recordID",
            "in": "path",
            "required": true,
            "type": "integer"
          }
        ],
        "responses": {
          "200": {
            "description": "successful operation"
          }
        }
      }
    },
    "/request/{recordID}/dataforsigning": {
      "get": {
        "tags": [
          "request"
        ],
        "description": " original endpont:form/[digit]/dataforsigning; calls getFullFormDataForSigning({recordID})",
        "parameters": [
          {
            "name": "recordID",
            "in": "path",
            "required": true,
            "type": "integer"
          }
        ],
        "responses": {
          "200": {
            "description": "successful operation"
          }
        }
      }
    },
    "/request/{recordID}/initiator/{initiator}": {
      "post": {
        "tags": [
          "request"
        ],
        "description": " original endpont:form/[digit]/initiator; calls setInitiator({recordID}, {initiator}))",
        "parameters": [
          {
            "name": "recordID",
            "in": "path",
            "required": true,
            "type": "integer"
          },
          {
            "name": "initiator",
            "in": "path",
            "required": true,
            "type": "string"
          }
        ],
        "responses": {
          "200": {
            "description": "successful operation"
          }
        }
      }
    },
    "/request/{recordID}/progress": {
      "get": {
        "tags": [
          "request"
        ],
        "description": " original endpont:form/[digit]/progress; calls getProgress({recordID})",
        "parameters": [
          {
            "name": "recordID",
            "in": "path",
            "required": true,
            "type": "integer"
          }
        ],
        "responses": {
          "200": {
            "description": "successful operation"
          }
        }
      }
    },
    "/request/{recordID}/progress/json": {
      "get": {
        "tags": [
          "request"
        ],
        "description": " original endpont:ajaJSON.php?a=getprogress; **not defined; calls getProgressJSON({recordID})",
        "parameters": [
          {
            "name": "recordID",
            "in": "path",
            "required": true,
            "type": "integer"
          }
        ],
        "responses": {
          "200": {
            "description": "successful operation"
          }
        }
      }
    },
    "/request/{recordID}/recordinfo": {
      "get": {
        "tags": [
          "request"
        ],
        "description": " original endpont:form/[digit]/recordinfo; calls getRecordInfo({recordID})",
        "parameters": [
          {
            "name": "recordID",
            "in": "path",
            "required": true,
            "type": "integer"
          }
        ],
        "responses": {
          "200": {
            "description": "successful operation"
          }
        }
      }
    },
    "/request/{recordID}/service/{serviceID}": {
      "post": {
        "tags": [
          "request"
        ],
        "description": " original endpont:form/[digit]/service; calls setService({recordID}, {serviceID})",
        "parameters": [
          {
            "name": "recordID",
            "in": "path",
            "required": true,
            "type": "integer"
          },
          {
            "name": "serviceID",
            "in": "path",
            "required": true,
            "type": "integer"
          }
        ],
        "responses": {
          "200": {
            "description": "successful operation"
          }
        }
      }
    },
    "/request/{recordID}/submit": {
      "post": {
        "tags": [
          "request"
        ],
        "description": " original endpont:form/[digit]/submit; calls doSubmit({recordID})",
        "parameters": [
          {
            "name": "recordID",
            "in": "path",
            "required": true,
            "type": "integer"
          }
        ],
        "responses": {
          "200": {
            "description": "successful operation"
          }
        }
      }
    },
    "/request/{recordID}/tags": {
      "get": {
        "tags": [
          "request"
        ],
        "description": " original endpont:form/[digit]/tags; calls getTags({recordID})",
        "parameters": [
          {
            "name": "recordID",
            "in": "path",
            "required": true,
            "type": "integer"
          }
        ],
        "responses": {
          "200": {
            "description": "successful operation"
          }
        }
      }
    },
    "/request/{recordID}/tags/{taginput}": {
      "post": {
        "tags": [
          "request"
        ],
        "description": " original endpont:ajaxIndex.php?a=updatetags calls parseTags({recordID},{taginput})",
        "parameters": [
          {
            "name": "recordID",
            "in": "path",
            "required": true,
            "type": "integer"
          },
          {
            "name": "taginput",
            "in": "path",
            "required": true,
            "type": "string"
          }
        ],
        "responses": {
          "200": {
            "description": "successful operation"
          }
        }
      }
    },
    "/request/{recordID}/title/{title}": {
      "post": {
        "tags": [
          "request"
        ],
        "description": " original endpont:form/[digit]/title; calls setTitle({recordID}, {title}))",
        "parameters": [
          {
            "name": "recordID",
            "in": "path",
            "required": true,
            "type": "integer"
          },
          {
            "name": "title",
            "in": "path",
            "required": true,
            "type": "string"
          }
        ],
        "responses": {
          "200": {
            "description": "successful operation"
          }
        }
      }
    },
    "/request/{recordID}/action/last": {
      "get": {
        "tags": [
          "request"
        ],
        "description": " original endpont:ajaxJSON.php?a=getlastaction; calls FormWorkflow.php initRecordID({recordID}), getLastAction()",
        "parameters": [
          {
            "name": "recordID",
            "in": "path",
            "required": true,
            "type": "integer"
          }
        ],
        "responses": {
          "200": {
            "description": "successful operation"
          }
        }
      }
    },
    "/request/{recordID}/action/{actionType}": {
      "get": {
        "tags": [
          "request"
        ],
        "description": " original endpont:formWorkflow/[digit]/apply; calls FormWorkflow.php initRecordID({recordID}), handleAction({dependencyID}, {actionType}, {comment})",
        "consumes": [
          "multipart/form-data"
        ],
        "parameters": [
          {
            "name": "recordID",
            "in": "path",
            "required": true,
            "type": "integer"
          },
          {
            "name": "dependencyID",
            "in": "formData",
            "required": true,
            "type": "integer"
          },
          {
            "name": "actionType",
            "in": "path",
            "required": true,
            "type": "string"
          },
          {
            "name": "comment",
            "in": "formData",
            "required": true,
            "type": "string"
          }
        ],
        "responses": {
          "200": {
            "description": "successful operation"
          }
        }
      }
    },
    "/request/{recordID}/step": {
      "get": {
        "tags": [
          "request"
        ],
        "description": " original endpont:formWorkflow/[digit]/currentStep; calls FormWorkflow.php initRecordID({recordID}), getCurrentSteps()",
        "parameters": [
          {
            "name": "recordID",
            "in": "path",
            "required": true,
            "type": "integer"
          }
        ],
        "responses": {
          "200": {
            "description": "successful operation"
          }
        }
      }
    },
    "/request/{recordID}/step/{stepID}": {
      "post": {
        "tags": [
          "request"
        ],
        "description": " original endpont:formWorkflow/[digit]/step; calls initRecordID({recordID}), setStep({stepID}, false, {comment})",
        "consumes": [
          "multipart/form-data"
        ],
        "parameters": [
          {
            "name": "recordID",
            "in": "path",
            "required": true,
            "type": "integer"
          },
          {
            "name": "stepID",
            "in": "path",
            "required": true,
            "type": "integer"
          },
          {
            "name": "comment",
            "in": "formData",
            "required": true,
            "type": "string"
          }
        ],
        "responses": {
          "200": {
            "description": "successful operation"
          }
        }
      }
    },
    "/request/{recordID}/indicator/format/{formats}": {
      "get": {
        "tags": [
          "request"
        ],
        "description": " original endpont:form/[digit]/indicator/formatSearch; calls getIndicatorsByRecordAndFormat({recordID}, {formats})",
        "parameters": [
          {
            "name": "recordID",
            "in": "path",
            "required": true,
            "type": "integer"
          },
          {
            "name": "formats",
            "in": "path",
            "required": true,
            "type": "string"
          }
        ],
        "responses": {
          "200": {
            "description": "successful operation"
          }
        }
      }
    },
    "/request/{recordID}/indicator/byworkflow": {
      "get": {
        "tags": [
          "request"
        ],
        "description": " original endpont:form/[digit]/workflow/indicator/assigned; calls getIndicatorsAssociatedWithWorkflow({recordID})",
        "parameters": [
          {
            "name": "recordID",
            "in": "path",
            "required": true,
            "type": "integer"
          }
        ],
        "responses": {
          "200": {
            "description": "successful operation"
          }
        }
      }
    },
    "/request/{recordID}/indicator/{indicatorID}/attachment": {
      "delete": {
        "tags": [
          "request"
        ],
        "description": " original endpont:ajaxIndex.php?a=deleteAttachment calls form.php deleteAttachment({recordID},{indicatorID},{series},{file})",
        "consumes": [
          "multipart/form-data"
        ],
        "parameters": [
          {
            "name": "recordID",
            "in": "path",
            "required": true,
            "type": "integer"
          },
          {
            "name": "indicatorID",
            "in": "path",
            "required": true,
            "type": "integer"
          },
          {
            "name": "series",
            "in": "formData",
            "required": true,
            "type": "integer"
          },
          {
            "name": "file",
            "in": "formData",
            "required": true,
            "type": "string"
          }
        ],
        "responses": {
          "200": {
            "description": "successful operation"
          }
        }
      }
    },
    "/request/{recordID}/indicator/{indicatorID}/history": {
      "get": {
        "tags": [
          "request"
        ],
        "description": " original endpont:form/[digit]/[digit]/[digit]/history calls getIndicatorLog({indicatorID}, {series}, {recordID})",
        "consumes": [
          "multipart/form-data"
        ],
        "parameters": [
          {
            "name": "recordID",
            "in": "path",
            "required": true,
            "type": "integer"
          },
          {
            "name": "indicatorID",
            "in": "path",
            "required": true,
            "type": "integer"
          },
          {
            "name": "series",
            "in": "formData",
            "required": true,
            "type": "integer"
          }
        ],
        "responses": {
          "200": {
            "description": "successful operation"
          }
        }
      }
    },
    "/request/{recordID}/indicator/{indicatorID}/raw/{parseTemplate}": {
      "get": {
        "tags": [
          "request"
        ],
        "description": " original endpont:form/[digit]/rawIndicator/[digit]/[digit]; calls getIndicator({indicatorID}, {series}, {recordID}, {parseTemplate})",
        "consumes": [
          "multipart/form-data"
        ],
        "parameters": [
          {
            "name": "recordID",
            "in": "path",
            "required": true,
            "type": "integer"
          },
          {
            "name": "indicatorID",
            "in": "path",
            "required": true,
            "type": "integer"
          },
          {
            "name": "series",
            "in": "formData",
            "required": true,
            "type": "integer"
          },
          {
            "name": "parseTemplate",
            "in": "path",
            "required": true,
            "type": "string",
            "enum": [
              true,
              false
            ]
          }
        ],
        "responses": {
          "200": {
            "description": "successful operation"
          }
        }
      }
    },
    "/request/{recordID_list}/indicator/{indicatorID_list}/customData": {
      "get": {
        "tags": [
          "request"
        ],
        "description": " original endpont:form/customData; calls form.php getCustomData( {recordID_list} , {indicatorID_list} )",
        "parameters": [
          {
            "name": "recordID_list",
            "in": "path",
            "required": true,
            "type": "string"
          },
          {
            "name": "indicatorID_list",
            "in": "path",
            "required": true,
            "type": "string"
          }
        ],
        "responses": {
          "200": {
            "description": "successful operation"
          }
        }
      }
    },
    "/search/indicator/{indicatorID}/{search_terms}": {
      "get": {
        "tags": [
          "search"
        ],
        "description": "originally /indicator/{indicatorID}/search/{search_terms}; calls query({\"terms\":[{\"id\":\"data\",\"indicatorID\":\"{indicatorID}\",\"operator\":\"=\",\"match\":\"{search_terms}\"}]})",
        "parameters": [
          {
            "name": "indicatorID",
            "in": "path",
            "required": true,
            "type": "integer"
          },
          {
            "name": "search_terms",
            "in": "path",
            "required": true,
            "type": "string"
          }
        ],
        "responses": {
          "200": {
            "description": "successful operation"
          }
        }
      }
    },
    "/search/request/{search_terms}": {
      "get": {
        "tags": [
          "search"
        ],
        "description": "originally /request/query/{search_terms}; calls form.php query({search_terms})",
        "parameters": [
          {
            "name": "search_terms",
            "in": "path",
            "required": true,
            "type": "string"
          }
        ],
        "responses": {
          "200": {
            "description": "successful operation"
          }
        }
      }
    },
    "/search/request/submitter/{search_terms}": {
      "get": {
        "tags": [
          "search"
        ],
        "description": "originally /request/search/submitter/{search_terms}; calls form.php query({\"terms\":[{\"id\":\"userID\",\"operator\":\"=\",\"match\":\"{search_terms}\"}]})",
        "parameters": [
          {
            "name": "search_terms",
            "in": "path",
            "required": true,
            "type": "string"
          }
        ],
        "responses": {
          "200": {
            "description": "successful operation"
          }
        }
      }
    },
    "/workflow": {
      "get": {
        "tags": [
          "workflow"
        ],
        "description": " original endpont:workflow; calls getAllUniqueWorkflows()",
        "responses": {
          "200": {
            "description": "successful operation"
          }
        }
      }
    },
    "/workflow/new": {
      "post": {
        "tags": [
          "workflow"
        ],
        "description": " original endpont:workflow/new; calls newWorkflow({description}))",
        "consumes": [
          "multipart/form-data"
        ],
        "parameters": [
          {
            "name": "description",
            "in": "formData",
            "required": true,
            "type": "string"
          }
        ],
        "responses": {
          "200": {
            "description": "successful operation"
          }
        }
      }
    },
    "/workflow/actions": {
      "get": {
        "tags": [
          "workflow"
        ],
        "description": " original endpont:workflow/actions; calls getActions()",
        "responses": {
          "200": {
            "description": "successful operation"
          }
        }
      }
    },
    "/workflow/actions/last": {
      "post": {
        "tags": [
          "workflow"
        ],
        "description": " original endpont:ajaxJson.php?a=getrecentactions; returns json; from DB",
        "responses": {
          "200": {
            "description": "successful operation"
          }
        }
      }
    },
    "/workflow/action/recent": {
      "post": {
        "tags": [
          "workflow"
        ],
        "description": " original endpont: returns json; from DB",
        "responses": {
          "200": {
            "description": "successful operation"
          }
        }
      }
    },
    "/workflow/categories": {
      "get": {
        "tags": [
          "workflow"
        ],
        "description": " original endpont:ajaxJson.php?a=getlastactions; calls getCategories()",
        "responses": {
          "200": {
            "description": "successful operation"
          }
        }
      }
    },
    "/workflow/categories/unabridged": {
      "get": {
        "tags": [
          "workflow"
        ],
        "description": " original endpont:workflow/categoriesUnabridged; calls getCategoriesUnabridged()",
        "responses": {
          "200": {
            "description": "successful operation"
          }
        }
      }
    },
    "/workflow/events": {
      "get": {
        "tags": [
          "workflow"
        ],
        "description": " original endpont:workflow/events; calls getAllEvents()",
        "responses": {
          "200": {
            "description": "successful operation"
          }
        }
      }
    },
    "/workflow/dependencies": {
      "get": {
        "tags": [
          "workflow"
        ],
        "description": " original endpont:workflow/dependencies; calls getAllDependencies()",
        "responses": {
          "200": {
            "description": "successful operation"
          }
        }
      }
    },
    "/workflow/dependencies/add/{description}": {
      "post": {
        "tags": [
          "workflow"
        ],
        "description": " original endpont:workflow/dependencies; calls addDependency({description}))",
        "parameters": [
          {
            "name": "description",
            "in": "path",
            "required": true,
            "type": "string"
          }
        ],
        "responses": {
          "200": {
            "description": "successful operation"
          }
        }
      }
    },
    "/workflow/dependencies/{dependencyID}/description/{description}": {
      "post": {
        "tags": [
          "workflow"
        ],
        "description": " original endpont:workflow/dependency/[digit]; calls updateDependency({dependencyID}, {description}))",
        "parameters": [
          {
            "name": "dependencyID",
            "in": "path",
            "required": true,
            "type": "integer"
          },
          {
            "name": "description",
            "in": "path",
            "required": true,
            "type": "string"
          }
        ],
        "responses": {
          "200": {
            "description": "successful operation"
          }
        }
      }
    },
    "/workflow/dependencies/{dependencyID}/privileges/{groupID}": {
      "post": {
        "tags": [
          "workflow"
        ],
        "description": " original endpont:workflow/dependency/[digit]/privileges; calls grantDependencyPrivs({dependencyID}, {groupID})",
        "parameters": [
          {
            "name": "dependencyID",
            "in": "path",
            "required": true,
            "type": "integer"
          },
          {
            "name": "groupID",
            "in": "path",
            "required": true,
            "type": "integer"
          }
        ],
        "responses": {
          "200": {
            "description": "successful operation"
          }
        }
      },
      "delete": {
        "tags": [
          "workflow"
        ],
        "description": " original endpont:workflow/dependency/[digit]/privileges; calls revokeDependencyPrivs({dependencyID}, {groupID})",
        "parameters": [
          {
            "name": "dependencyID",
            "in": "path",
            "required": true,
            "type": "integer"
          },
          {
            "name": "groupID",
            "in": "path",
            "required": true,
            "type": "integer"
          }
        ],
        "responses": {
          "200": {
            "description": "successful operation"
          }
        }
      }
    },
    "/workflow/step": {
      "get": {
        "tags": [
          "workflow"
        ],
        "description": " original endpont:workflow/steps; calls getAllSteps()",
        "responses": {
          "200": {
            "description": "successful operation"
          }
        }
      }
    },
    "/workflow/step/{stepID}": {
      "delete": {
        "tags": [
          "workflow"
        ],
        "description": " original endpont:workflow/step/[digit]; calls deleteStep({stepID})",
        "parameters": [
          {
            "name": "stepID",
            "in": "path",
            "required": true,
            "type": "integer"
          }
        ],
        "responses": {
          "200": {
            "description": "successful operation"
          }
        }
      }
    },
    "/workflow/step/{stepID}/title/{title}": {
      "post": {
        "tags": [
          "workflow"
        ],
        "description": " original endpont:workflow/step/[digit]; calls updateStep({stepID}, {title}))",
        "parameters": [
          {
            "name": "stepID",
            "in": "path",
            "required": true,
            "type": "integer"
          },
          {
            "name": "title",
            "in": "path",
            "required": true,
            "type": "string"
          }
        ],
        "responses": {
          "200": {
            "description": "successful operation"
          }
        }
      }
    },
    "/workflow/step/{stepID}/dependencies": {
      "get": {
        "tags": [
          "workflow"
        ],
        "description": " original endpont:workflow/step/[digit]/dependencies; calls getDependencies({stepID})",
        "parameters": [
          {
            "name": "stepID",
            "in": "path",
            "required": true,
            "type": "integer"
          }
        ],
        "responses": {
          "200": {
            "description": "successful operation"
          }
        }
      }
    },
    "/workflow/step/{stepID}/dependencies/{dependencyID}": {
      "post": {
        "tags": [
          "workflow"
        ],
        "description": " original endpont:workflow/step/[digit]/dependencies; calls linkDependency({stepID}, {dependencyID})",
        "parameters": [
          {
            "name": "stepID",
            "in": "path",
            "required": true,
            "type": "integer"
          },
          {
            "name": "dependencyID",
            "in": "path",
            "required": true,
            "type": "integer"
          }
        ],
        "responses": {
          "200": {
            "description": "successful operation"
          }
        }
      },
      "delete": {
        "tags": [
          "workflow"
        ],
        "description": " original endpont:workflow/step/[digit]/dependencies; calls unlinkDependency({stepID}, {dependencyID})",
        "parameters": [
          {
            "name": "stepID",
            "in": "path",
            "required": true,
            "type": "integer"
          },
          {
            "name": "dependencyID",
            "in": "path",
            "required": true,
            "type": "integer"
          }
        ],
        "responses": {
          "200": {
            "description": "successful operation"
          }
        }
      }
    },
    "/workflow/step/{stepID}/dynamicApprover/employee/{indicatorID}": {
      "post": {
        "tags": [
          "workflow"
        ],
        "description": " original endpont:workflow/step/[digit]/indicatorID_for_assigned_empUID; calls setDynamicApprover({stepID}, {indicatorID})",
        "parameters": [
          {
            "name": "stepID",
            "in": "path",
            "required": true,
            "type": "integer"
          },
          {
            "name": "indicatorID",
            "in": "path",
            "required": true,
            "type": "integer"
          }
        ],
        "responses": {
          "200": {
            "description": "successful operation"
          }
        }
      }
    },
    "/workflow/step/{stepID}/dynamicApprover/group/{indicatorID}": {
      "post": {
        "tags": [
          "workflow"
        ],
        "description": " original endpont:workflow/step/[digit]/indicatorID_for_assigned_groupID; calls setDynamicGroupApprover({stepID}, {indicatorID})",
        "parameters": [
          {
            "name": "stepID",
            "in": "path",
            "required": true,
            "type": "integer"
          },
          {
            "name": "indicatorID",
            "in": "path",
            "required": true,
            "type": "integer"
          }
        ],
        "responses": {
          "200": {
            "description": "successful operation"
          }
        }
      }
    },
    "/workflow/{workflowID}": {
      "post": {
        "tags": [
          "workflow"
        ],
        "description": " original endpont:workflow/[digit]; calls modify({workflowID}); ***this function doesn't exist",
        "parameters": [
          {
            "name": "workflowID",
            "in": "path",
            "required": true,
            "type": "integer"
          }
        ],
        "responses": {
          "200": {
            "description": "successful operation"
          }
        }
      },
      "delete": {
        "tags": [
          "workflow"
        ],
        "description": " original endpont:workflow/[digit]; calls deleteWorkflow({workflowID})",
        "parameters": [
          {
            "name": "workflowID",
            "in": "path",
            "required": true,
            "type": "integer"
          }
        ],
        "responses": {
          "200": {
            "description": "successful operation"
          }
        }
      }
    },
    "/workflow/{workflowID}/map/summary": {
      "get": {
        "tags": [
          "workflow"
        ],
        "description": " original endpont:'workflow/[digit]/map/summary; calls setWorkflowID({workflowID}), getSummaryMap()",
        "parameters": [
          {
            "name": "workflowID",
            "in": "path",
            "required": true,
            "type": "integer"
          }
        ],
        "responses": {
          "200": {
            "description": "successful operation"
          }
        }
      }
    },
    "/workflow/{workflowID}/route": {
      "get": {
        "tags": [
          "workflow"
        ],
        "description": " original endpont:workflow/[digit]/route; calls setWorkflowID({workflowID}), getRoutes()",
        "parameters": [
          {
            "name": "workflowID",
            "in": "path",
            "required": true,
            "type": "integer"
          }
        ],
        "responses": {
          "200": {
            "description": "successful operation"
          }
        }
      }
    },
    "/workflow/{workflowID}/step": {
      "get": {
        "tags": [
          "workflow"
        ],
        "description": " original endpont:workflow/[digit]; calls setWorkflowID({workflowID}), getSteps()",
        "parameters": [
          {
            "name": "workflowID",
            "in": "path",
            "required": true,
            "type": "integer"
          }
        ],
        "responses": {
          "200": {
            "description": "successful operation"
          }
        }
      },
      "post": {
        "tags": [
          "workflow"
        ],
        "description": " original endpont:workflow/[digit]/step; calls setWorkflowID({workflowID}), createStep({stepTitle}, {stepBgColor}, {stepFontColor})",
        "consumes": [
          "multipart/form-data"
        ],
        "parameters": [
          {
            "name": "workflowID",
            "in": "path",
            "required": true,
            "type": "integer"
          },
          {
            "name": "stepTitle",
            "in": "formData",
            "required": true,
            "type": "string"
          },
          {
            "name": "stepBgColor",
            "in": "formData",
            "required": true,
            "type": "string"
          },
          {
            "name": "stepFontColor",
            "in": "formData",
            "required": true,
            "type": "string"
          }
        ],
        "responses": {
          "200": {
            "description": "successful operation"
          }
        }
      }
    },
    "/workflow/{workflowID}/step/{stepID}/editorPosition/{x}/{y}": {
      "post": {
        "tags": [
          "workflow"
        ],
        "description": " original endpont:workflow/[digit]/editorPosition; calls setWorkflowID({workflowID}), setEditorPosition({stepID}, {x}, {y})",
        "parameters": [
          {
            "name": "workflowID",
            "in": "path",
            "required": true,
            "type": "integer"
          },
          {
            "name": "stepID",
            "in": "path",
            "required": true,
            "type": "integer"
          },
          {
            "name": "x",
            "in": "path",
            "required": true,
            "type": "integer"
          },
          {
            "name": "y",
            "in": "path",
            "required": true,
            "type": "integer"
          }
        ],
        "responses": {
          "200": {
            "description": "successful operation"
          }
        }
      }
    },
    "/workflow/{workflowID}/step/{stepID}/setInitial": {
      "post": {
        "tags": [
          "workflow"
        ],
        "description": " original endpont:workflow/[digit]/initialStep; calls setWorkflowID({workflowID}), setInitialStep({stepID})",
        "parameters": [
          {
            "name": "workflowID",
            "in": "path",
            "required": true,
            "type": "integer"
          },
          {
            "name": "stepID",
            "in": "path",
            "required": true,
            "type": "integer"
          }
        ],
        "responses": {
          "200": {
            "description": "successful operation"
          }
        }
      }
    },
    "/workflow/{workflowID}/step/{stepID}/action/{action}/nextStep/{nextStepID}": {
      "post": {
        "tags": [
          "workflow"
        ],
        "description": " original endpont:workflow/[digit]/action; calls setWorkflowID({workflowID}), createAction({stepID}, {nextStepID}, {action}))",
        "parameters": [
          {
            "name": "workflowID",
            "in": "path",
            "required": true,
            "type": "integer"
          },
          {
            "name": "stepID",
            "in": "path",
            "required": true,
            "type": "integer"
          },
          {
            "name": "nextStepID",
            "in": "path",
            "required": true,
            "type": "integer"
          },
          {
            "name": "action",
            "in": "path",
            "required": true,
            "type": "string"
          }
        ],
        "responses": {
          "200": {
            "description": "successful operation"
          }
        }
      },
      "delete": {
        "tags": [
          "workflow"
        ],
        "description": " original endpont:workflow/[digit]/step/[digit]/[text]/[digit]; calls setWorkflowID({workflowID}), deleteAction({stepID}, {nextStepID}, {action})",
        "parameters": [
          {
            "name": "workflowID",
            "in": "path",
            "required": true,
            "type": "integer"
          },
          {
            "name": "stepID",
            "in": "path",
            "required": true,
            "type": "integer"
          },
          {
            "name": "nextStepID",
            "in": "path",
            "required": true,
            "type": "integer"
          },
          {
            "name": "action",
            "in": "path",
            "required": true,
            "type": "string"
          }
        ],
        "responses": {
          "200": {
            "description": "successful operation"
          }
        }
      }
    },
    "/workflow/{workflowID}/step/{stepID}/action/{action}/event": {
      "get": {
        "tags": [
          "workflow"
        ],
        "description": " original endpont:workflow/[digit]/step/[digit]/[text]/events; calls setWorkflowID({workflowID}), getEvents({stepID}, {action})",
        "parameters": [
          {
            "name": "workflowID",
            "in": "path",
            "required": true,
            "type": "integer"
          },
          {
            "name": "stepID",
            "in": "path",
            "required": true,
            "type": "integer"
          },
          {
            "name": "action",
            "in": "path",
            "required": true,
            "type": "string"
          }
        ],
        "responses": {
          "200": {
            "description": "successful operation"
          }
        }
      }
    },
    "/workflow/{workflowID}/step/{stepID}/action/{action}/event/{eventID}": {
      "post": {
        "tags": [
          "workflow"
        ],
        "description": " original endpont:'workflow/[digit]/step/[digit]/[text]/events; calls setWorkflowID({workflowID}), linkEvent({stepID}, {action}, {eventID}))",
        "parameters": [
          {
            "name": "workflowID",
            "in": "path",
            "required": true,
            "type": "integer"
          },
          {
            "name": "stepID",
            "in": "path",
            "required": true,
            "type": "integer"
          },
          {
            "name": "action",
            "in": "path",
            "required": true,
            "type": "string"
          },
          {
            "name": "eventID",
            "in": "path",
            "required": true,
            "type": "string"
          }
        ],
        "responses": {
          "200": {
            "description": "successful operation"
          }
        }
      },
      "delete": {
        "tags": [
          "workflow"
        ],
        "description": " original endpont:workflow/[digit]/step/[digit]/[text]/events; calls setWorkflowID({workflowID}), unlinkEvent({stepID}, {action}, {eventID}))",
        "parameters": [
          {
            "name": "workflowID",
            "in": "path",
            "required": true,
            "type": "integer"
          },
          {
            "name": "stepID",
            "in": "path",
            "required": true,
            "type": "integer"
          },
          {
            "name": "action",
            "in": "path",
            "required": true,
            "type": "string"
          },
          {
            "name": "eventID",
            "in": "path",
            "required": true,
            "type": "string"
          }
        ],
        "responses": {
          "200": {
            "description": "successful operation"
          }
        }
      }
    },
    "/group": {
      "get": {
        "tags": [
          "group"
        ],
        "description": " original endpont:system/groups; calls System.php getGroups()",
        "responses": {
          "200": {
            "description": "successful operation"
          }
        }
      }
    },
    "/group/new": {
      "post": {
        "tags": [
          "group"
        ],
        "description": " original endpont:group; calls addGroup({groupName},{groupDesc})",
        "consumes": [
          "multipart/form-data"
        ],
        "parameters": [
          {
            "name": "groupName",
            "in": "formData",
            "required": true,
            "type": "string"
          },
          {
            "name": "groupDesc",
            "in": "formData",
            "required": true,
            "type": "string"
          }
        ],
        "responses": {
          "200": {
            "description": "successful operation"
          }
        }
      }
    },
    "/group/members": {
      "get": {
        "tags": [
          "group"
        ],
        "description": " original endpont:group/members; calls getGroupsAndMembers()",
        "responses": {
          "200": {
            "description": "successful operation"
          }
        }
      }
    },
    "/group/{groupID}": {
      "delete": {
        "tags": [
          "group"
        ],
        "description": " original endpont:group/[digit]; calls removeGroup({groupID})",
        "parameters": [
          {
            "name": "groupID",
            "in": "path",
            "required": true,
            "type": "integer"
          }
        ],
        "responses": {
          "200": {
            "description": "successful operation"
          }
        }
      }
    },
    "/group/{groupID}/update": {
      "post": {
        "tags": [
          "group"
        ],
        "description": " original endpont:system/updateGroup/[digit]; calls System.php updateGroup({groupID}})",
        "parameters": [
          {
            "name": "groupID",
            "in": "path",
            "required": true,
            "type": "integer"
          }
        ],
        "responses": {
          "200": {
            "description": "successful operation"
          }
        }
      }
    },
    "/group/{groupID}/members": {
      "get": {
        "tags": [
          "group"
        ],
        "description": " original endpont:group/[digit]/members; calls getMembers({groupID})",
        "parameters": [
          {
            "name": "groupID",
            "in": "path",
            "required": true,
            "type": "integer"
          }
        ],
        "responses": {
          "200": {
            "description": "successful operation"
          }
        }
      }
    },
    "/group/{groupID}/members/{userID}": {
      "post": {
        "tags": [
          "group"
        ],
        "description": " original endpont:group/[digit]/members; calls addMember({userID}, {groupID})",
        "parameters": [
          {
            "name": "userID",
            "in": "path",
            "required": true,
            "type": "integer"
          },
          {
            "name": "groupID",
            "in": "path",
            "required": true,
            "type": "integer"
          }
        ],
        "responses": {
          "200": {
            "description": "successful operation"
          }
        }
      },
      "delete": {
        "tags": [
          "group"
        ],
        "description": " original endpont:group/[digit]/members/[text]; calls removeMember({userID}, {groupID})",
        "parameters": [
          {
            "name": "groupID",
            "in": "path",
            "required": true,
            "type": "integer"
          },
          {
            "name": "userID",
            "in": "path",
            "required": true,
            "type": "integer"
          }
        ],
        "responses": {
          "200": {
            "description": "successful operation"
          }
        }
      }
    },
    "/service": {
      "get": {
        "tags": [
          "service"
        ],
        "description": " original endpont:group/members; calls getGroupsAndMembers()",
        "responses": {
          "200": {
            "description": "successful operation"
          }
        }
      }
    },
    "/service/new": {
      "post": {
        "tags": [
          "service"
        ],
        "description": " original endpont:service; calls addService({service}, {groupID})",
        "consumes": [
          "multipart/form-data"
        ],
        "parameters": [
          {
            "name": "service",
            "in": "formData",
            "required": true,
            "type": "string"
          },
          {
            "name": "groupID",
            "in": "formData",
            "required": true,
            "type": "integer"
          }
        ],
        "responses": {
          "200": {
            "description": "successful operation"
          }
        }
      }
    },
    "/service/services": {
      "get": {
        "tags": [
          "service"
        ],
        "description": " original endpont:system/services; calls System.php getServices()",
        "responses": {
          "200": {
            "description": "successful operation"
          }
        }
      }
    },
    "/service/quadrads": {
      "get": {
        "tags": [
          "service"
        ],
        "description": " original endpont:service/quadrads; calls getQuadrads()",
        "responses": {
          "200": {
            "description": "successful operation"
          }
        }
      }
    },
    "/service/{serviceID}": {
      "post": {
        "tags": [
          "service"
        ],
        "description": " original endpont:system/updateService/[digit]; calls System.php updateService({serviceID})",
        "parameters": [
          {
            "name": "serviceID",
            "in": "path",
            "required": true,
            "type": "integer"
          }
        ],
        "responses": {
          "200": {
            "description": "successful operation"
          }
        }
      },
      "delete": {
        "tags": [
          "service"
        ],
        "description": " original endpont:service/[digit]; calls removeService({serviceID})",
        "parameters": [
          {
            "name": "serviceID",
            "in": "path",
            "required": true,
            "type": "integer"
          }
        ],
        "responses": {
          "200": {
            "description": "successful operation"
          }
        }
      }
    },
    "/service/{serviceID}/members": {
      "get": {
        "tags": [
          "service"
        ],
        "description": " original endpont:service/[digit]/members; calls getMembers({serviceID})",
        "parameters": [
          {
            "name": "serviceID",
            "in": "path",
            "required": true,
            "type": "integer"
          }
        ],
        "responses": {
          "200": {
            "description": "successful operation"
          }
        }
      }
    },
    "/service/{serviceID}/members/{userID}": {
      "post": {
        "tags": [
          "service"
        ],
        "description": " original endpont:service/[digit]/members; calls addMember({serviceID}, {userID})",
        "parameters": [
          {
            "name": "serviceID",
            "in": "path",
            "required": true,
            "type": "integer"
          },
          {
            "name": "userID",
            "in": "path",
            "required": true,
            "type": "integer"
          }
        ],
        "responses": {
          "200": {
            "description": "successful operation"
          }
        }
      },
      "delete": {
        "tags": [
          "service"
        ],
        "description": " original endpont:service/[digit]/members/[text]; calls removeMember({serviceID}, {userID})",
        "parameters": [
          {
            "name": "serviceID",
            "in": "path",
            "required": true,
            "type": "integer"
          },
          {
            "name": "userID",
            "in": "path",
            "required": true,
            "type": "integer"
          }
        ],
        "responses": {
          "200": {
            "description": "successful operation"
          }
        }
      }
    },
    "/settings/actions": {
      "post": {
        "tags": [
          "settings"
        ],
        "description": " original endpont:system/actions; calls System.php addAction()",
        "responses": {
          "200": {
            "description": "successful operation"
          }
        }
      }
    },
    "/settings/files": {
      "get": {
        "tags": [
          "settings"
        ],
        "description": " original endpont:system/files; calls System.php getFileList()",
        "responses": {
          "200": {
            "description": "successful operation"
          }
        }
      },
      "post": {
        "tags": [
          "settings"
        ],
        "description": " original endpont:ajaxIndex.php?a=uploadFile calls System.php newFile()",
        "responses": {
          "200": {
            "description": "successful operation"
          }
        }
      }
    },
    "/settings/files/{fileName}": {
      "delete": {
        "tags": [
          "settings"
        ],
        "description": " original endpont:system/files/[text]; calls System.php removeFile({fileName})",
        "parameters": [
          {
            "name": "fileName",
            "in": "path",
            "required": true,
            "type": "string"
          }
        ],
        "responses": {
          "200": {
            "description": "successful operation"
          }
        }
      }
    },
    "/settings/requestLabel": {
      "post": {
        "tags": [
          "settings"
        ],
        "description": " original endpont:system/settings/requestLabel; calls System.php setRequestLabel()",
        "responses": {
          "200": {
            "description": "successful operation"
          }
        }
      }
    },
    "/settings/heading": {
      "post": {
        "tags": [
          "settings"
        ],
        "description": " original endpont:system/settings/heading; calls System.php setHeading()",
        "responses": {
          "200": {
            "description": "successful operation"
          }
        }
      }
    },
    "/settings/subHeading": {
      "post": {
        "tags": [
          "settings"
        ],
        "description": " original endpont:system/settings/subHeading; calls System.php setSubHeading()",
        "responses": {
          "200": {
            "description": "successful operation"
          }
        }
      }
    },
    "/settings/timeZone": {
      "post": {
        "tags": [
          "settings"
        ],
        "description": " original endpont:system/settings/timeZone; calls System.php setTimeZone()",
        "responses": {
          "200": {
            "description": "successful operation"
          }
        }
      }
    },
    "/templates": {
      "get": {
        "tags": [
          "templates"
        ],
        "description": " original endpont:system/templates; calls System.php getTemplateList()",
        "responses": {
          "200": {
            "description": "successful operation"
          }
        }
      }
    },
    "/templates/{fileName}": {
      "get": {
        "tags": [
          "templates"
        ],
        "description": " original endpont:system/templates/[text] calls System.php getTemplate({fileName})",
        "parameters": [
          {
            "name": "fileName",
            "in": "path",
            "required": true,
            "type": "string"
          }
        ],
        "responses": {
          "200": {
            "description": "successful operation"
          }
        }
      },
      "post": {
        "tags": [
          "templates"
        ],
        "description": " original endpont:system/templates/[text]; calls setTemplate({fileName})",
        "parameters": [
          {
            "name": "fileName",
            "in": "path",
            "required": true,
            "type": "string"
          }
        ],
        "responses": {
          "200": {
            "description": "successful operation"
          }
        }
      },
      "delete": {
        "tags": [
          "templates"
        ],
        "description": " original endpont:system/templates/[text]; calls removeCustomTemplate({fileName})",
        "parameters": [
          {
            "name": "fileName",
            "in": "path",
            "required": true,
            "type": "string"
          }
        ],
        "responses": {
          "200": {
            "description": "successful operation"
          }
        }
      }
    },
    "/templates/{fileName}/standard": {
      "get": {
        "tags": [
          "templates"
        ],
        "description": " original endpont:system/templates/[text]/standard; calls System.php getTemplate({fileName}, true)",
        "parameters": [
          {
            "name": "fileName",
            "in": "path",
            "required": true,
            "type": "string"
          }
        ],
        "responses": {
          "200": {
            "description": "successful operation"
          }
        }
      }
    },
    "/templates/reportTemplates": {
      "get": {
        "tags": [
          "templates"
        ],
        "description": " original endpont:system/reportTemplates; calls System.php getReportTemplateList()",
        "responses": {
          "200": {
            "description": "successful operation"
          }
        }
      }
    },
    "/templates/reportTemplates/new": {
      "post": {
        "tags": [
          "templates"
        ],
        "description": " original endpont:system/reportTemplates; calls newReportTemplate({filename})",
        "consumes": [
          "multipart/form-data"
        ],
        "parameters": [
          {
            "name": "filename",
            "in": "formData",
            "required": true,
            "type": "string"
          }
        ],
        "responses": {
          "200": {
            "description": "successful operation"
          }
        }
      }
    },
    "/templates/reportTemplates/{fileName}": {
      "get": {
        "tags": [
          "templates"
        ],
        "description": " original endpont:system/reportTemplates/[text]; calls System.php getReportTemplate({fileName})",
        "parameters": [
          {
            "name": "fileName",
            "in": "path",
            "required": true,
            "type": "string"
          }
        ],
        "responses": {
          "200": {
            "description": "successful operation"
          }
        }
      },
      "post": {
        "tags": [
          "templates"
        ],
        "description": " original endpont:system/reportTemplates/[text]; calls setReportTemplate({fileName})",
        "parameters": [
          {
            "name": "fileName",
            "in": "path",
            "required": true,
            "type": "string"
          }
        ],
        "responses": {
          "200": {
            "description": "successful operation"
          }
        }
      },
      "delete": {
        "tags": [
          "templates"
        ],
        "description": " original endpont:system/reportTemplates/[text]; calls removeReportTemplate({fileName})",
        "parameters": [
          {
            "name": "fileName",
            "in": "path",
            "required": true,
            "type": "string"
          }
        ],
        "responses": {
          "200": {
            "description": "successful operation"
          }
        }
      }
    },
    "/import/xls": {
      "post": {
        "tags": [
          "import"
        ],
        "description": " original endpont:import/xls; calls SpreadSheetUtil::loadFileIntoArray(__DIR__ . '/../../files/' . {fileName}}, {hasHeaders})",
        "parameters": [
          {
            "name": "fileName",
            "in": "query",
            "required": true,
            "type": "string"
          },
          {
            "name": "hasHeaders",
            "in": "query",
            "required": true,
            "type": "integer"
          }
        ],
        "responses": {
          "200": {
            "description": "successful operation"
          }
        }
      }
    },
    "/inbox/dependency/{dependencyID}": {
      "get": {
        "tags": [
          "inbox"
        ],
        "description": " original endpont:inbox/dependency/[text]; calls getInbox({dependencyID})",
        "parameters": [
          {
            "name": "dependencyID",
            "in": "path",
            "required": true,
            "type": "integer"
          }
        ],
        "responses": {
          "200": {
            "description": "successful operation"
          }
        }
      }
    },
    "/classicphonebook/search/{searchText}": {
      "get": {
        "tags": [
          "classicphonebook"
        ],
        "description": " original endpont:classicphonebook/search/[text]; calls search({searchText}) function from VAMC_Directory()",
        "parameters": [
          {
            "name": "searchText",
            "in": "path",
            "required": true,
            "type": "string"
          }
        ],
        "responses": {
          "200": {
            "description": "successful operation"
          }
        }
      }
    },
    "/converter/json": {
      "post": {
        "tags": [
          "converter"
        ],
        "description": " original endpont:converter/json; returns json_decode({input}, true)",
        "consumes": [
          "multipart/form-data"
        ],
        "parameters": [
          {
            "name": "input",
            "in": "formData",
            "required": true,
            "type": "string"
          }
        ],
        "responses": {
          "200": {
            "description": "successful operation"
          }
        }
      }
    },
    "/FTEData/selecteeSheet": {
      "get": {
        "tags": [
          "FTEData"
        ],
        "description": " original endpont:FTEData/selecteeSheet; calls form->getCustomData() from form.php, but most of the logic is in the controller",
        "responses": {
          "200": {
            "description": "successful operation"
          }
        }
      }
    },
    "/FTEData/selecteeSheetDateRange": {
      "get": {
        "tags": [
          "FTEData"
        ],
        "description": " original endpont:FTEData/selecteeSheetDateRange; calls form->getCustomData() from form.php, but most of the logic is in the controller",
        "responses": {
          "200": {
            "description": "successful operation"
          }
        }
      }
    },
    "/simpledata/equiptest": {
      "get": {
        "tags": [
          "simpledata"
        ],
        "description": " original endpont:simpledata/equiptest; does all the logic in controller",
        "responses": {
          "200": {
            "description": "successful operation"
          }
        }
      }
    },
    "/telemetry/summary/month": {
      "get": {
        "tags": [
          "telemetry"
        ],
        "description": " original endpont:telemetry/summary/month; calls Telemetry.php getRequestsPerMonth()",
        "responses": {
          "200": {
            "description": "successful operation"
          }
        }
      }
    },
    "/telemetry/simple/requests": {
      "get": {
        "tags": [
          "telemetry"
        ],
        "description": " original endpont:telemetry/simple/requests; calls Telemetry.php getRequestsSimple({startTime}, {endTime})",
        "parameters": [
          {
            "name": "startTime",
            "in": "query",
            "required": true,
            "type": "integer"
          },
          {
            "name": "endTime",
            "in": "query",
            "required": true,
            "type": "integer"
          }
        ],
        "responses": {
          "200": {
            "description": "successful operation"
          }
        }
      }
    }
  },
  "schemes": [
    "https"
  ],
  "definitions": {
    "form": {
      "type": "object",
      "required": [
        "id"
      ],
      "properties": {
        "id": {
          "type": "string",
          "description": "; categories.categoryID in database"
        },
        "parentID": {
          "type": "string",
          "description": "; categories.parentID in database"
        },
        "name": {
          "type": "string",
          "description": "; categories.categoryName in database"
        },
        "description": {
          "type": "string",
          "description": "; categories.categoryDescription in database"
        },
        "workflowID": {
          "type": "integer",
          "description": "; categories.workflowID in database"
        },
        "sort": {
          "type": "integer",
          "description": "; categories.sort in database"
        },
        "needToKnow": {
          "type": "integer",
          "description": "; categories.needToKnow in database"
        },
        "formLibraryID": {
          "type": "integer",
          "description": "; categories.formLibraryID in database"
        },
        "visible": {
          "type": "integer",
          "description": "; categories.visible in database"
        },
        "disabled": {
          "type": "integer",
          "description": "; categories.disabled in database"
        },
        "type": {
          "type": "string",
          "description": "; categories.type in database"
        }
      }
    },
    "request": {
      "type": "object",
      "required": [
        "id"
      ],
      "properties": {
        "id": {
          "type": "integer",
          "description": "; records.recordID in database"
        },
        "date": {
          "type": "integer",
          "description": "; records.date in database"
        },
        "serviceID": {
          "type": "integer",
          "description": "; records.serviceID in database"
        },
        "userID": {
          "type": "string",
          "description": "; records.userID in database"
        },
        "title": {
          "type": "string",
          "description": "; records.title in database"
        },
        "priority": {
          "type": "integer",
          "description": "; records.priority in database"
        },
        "lastStatus": {
          "type": "string",
          "description": "; records.lastStatus in database"
        },
        "submitted": {
          "type": "integer",
          "description": "; records.submitted in database"
        },
        "deleted": {
          "type": "integer",
          "description": "; records.deleted in database"
        },
        "isWritableUser": {
          "type": "integer",
          "description": "; records.isWritableUser in database"
        },
        "isWritableGroup": {
          "type": "integer",
          "description": "; records.isWritableGroup in database"
        }
      }
    }
  }
}
